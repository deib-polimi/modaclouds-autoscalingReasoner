#!/bin/bash

set -e -E -u -o pipefail -o noclobber -o noglob +o braceexpand || exit 1
trap 'printf "[ee] failed: %s\n" "${BASH_COMMAND}" >&2' ERR || exit 1

if test "$( getent passwd -- mos-services | cut -f 3 -d : || printf '%s' "${UID}" )" -ne "${UID}" ; then
    exec sudo -u mos-services -g mos-services -E -n -- "${0}" "${@}"
    exit 1
fi

if ! test "${#}" -eq 0 ; then
    printf '[ii] invalid arguments; aborting!\n' >&2
    exit 1
fi

umask 0027

exec </dev/null >&2

_variable_defaults=(
        
        # NOTE:  Add other definitions that could come from the packaging descriptor, and are needed at runtime.
        #   It enables hard-coding some definitions, which could later be overriden with environment variables.
        
        _MODACLOUDS_AR_DISTRIBUTION='@{definitions:environment:MODACLOUDS_AR_DISTRIBUTION}'
        _MODACLOUDS_AR_OWN_IP='@{definitions:environment:MODACLOUDS_AR_OWN_IP}'
        _MODACLOUDS_AR_LISTENER_PORT='@{definitions:environment:MODACLOUDS_AR_LISTENER_PORT}'
        _MODACLOUDS_AR_PATH_TO_MODEL='@{definitions:environment:MODACLOUDS_AR_PATH_TO_MODEL}'
        _MODACLOUDS_AR_SSH_USER='@{definitions:environment:MODACLOUDS_AR_SSH_USER}'
        _MODACLOUDS_AR_SSH_HOST='@{definitions:environment:MODACLOUDS_AR_SSH_HOST}'
        _MODACLOUDS_AR_SSH_PASS='@{definitions:environment:MODACLOUDS_AR_SSH_PASS}'
        _MODACLOUDS_AR_CLOUDML_IP='@{definitions:environment:MODACLOUDS_AR_CLOUDML_IP}'
        _MODACLOUDS_AR_CLOUDML_PORT='@{definitions:environment:MODACLOUDS_AR_CLOUDML_PORT}'
        _MODACLOUDS_TOWER4CLOUDS_MANAGER_IP='@{definitions:environment:MODACLOUDS_TOWER4CLOUDS_MANAGER_IP}'
        _MODACLOUDS_TOWER4CLOUDS_MANAGER_PORT='@{definitions:environment:MODACLOUDS_TOWER4CLOUDS_MANAGER_PORT}'
        _MODACLOUDS_AR_DEF_DEMAND='@{definitions:environment:MODACLOUDS_AR_DEF_DEMAND}'
        _MODACLOUDS_AR_OBJ_STORE_IP='@{definitions:environment:MODACLOUDS_AR_OBJ_STORE_IP}'
        _MODACLOUDS_AR_OBJ_STORE_PORT='@{definitions:environment:MODACLOUDS_AR_OBJ_STORE_PORT}'
        _MODACLOUDS_AR_OBJ_STORE_PATH='@{definitions:environment:MODACLOUDS_AR_OBJ_STORE_PATH}'
        _MODACLOUDS_AR_SOLVER_NAME='@{definitions:environment:MODACLOUDS_AR_SOLVER_NAME}'
        _MODACLOUDS_AR_SOLVER_EXECUTABLE='@{definitions:environment:MODACLOUDS_AR_SOLVER_EXECUTABLE}'
        _MODACLOUDS_AR_SOLVER_THREADS='@{definitions:environment:MODACLOUDS_AR_SOLVER_THREADS}'
        
        _MODACLOUDS_AR_TMPDIR='@{definitions:environment:MODACLOUDS_AR_TMPDIR}'
        _MODACLOUDS_AR_JAVA_HOME='@{definitions:environment:MODACLOUDS_AR_JAVA_HOME}'
        _MODACLOUDS_AR_PATH='@{definitions:environment:MODACLOUDS_AR_PATH}'

        _JAVA_HOME='@{definitions:environment:JAVA_HOME}'
        _PATH='@{definitions:environment:PATH}'
        _TMPDIR='@{definitions:environment:TMPDIR}'
)
declare "${_variable_defaults[@]}"


# NOTE:  Don't touch, it enables running multiple instances of the same service at the same time.
_identifier="${modaclouds_service_identifier:-0000000000000000000000000000000000000000}"

# NOTE:  Don't touch, it tries to "auto-discover" the proper temporary folder.
if test -n "${modaclouds_service_temporary:-}" ; then
    _TMPDIR="${modaclouds_service_temporary:-}"
elif test -n "${modaclouds_temporary:-}" ; then
    _TMPDIR="${modaclouds_temporary}/services/${_identifier}"
else
    _TMPDIR="${_TMPDIR}/${_identifier}"
fi


_variable_overrides=(
        
        # NOTE:  Add the same definitions as in the previous case, but keep the pattern as bellow.
        #   It enables overriding some definitions with environment variables, or fallbacks to the hard-coded ones.
        
        _MODACLOUDS_AR_DISTRIBUTION="${MODACLOUDS_AR_DISTRIBUTION:-${_MODACLOUDS_AR_DISTRIBUTION}}"
        _MODACLOUDS_AR_OWN_IP="${MODACLOUDS_AR_OWN_IP:-${_MODACLOUDS_AR_OWN_IP}}"
        _MODACLOUDS_AR_LISTENER_PORT="${MODACLOUDS_AR_LISTENER_PORT:-${_MODACLOUDS_AR_LISTENER_PORT}}"
        _MODACLOUDS_AR_PATH_TO_MODEL="${MODACLOUDS_AR_PATH_TO_MODEL:-${_MODACLOUDS_AR_PATH_TO_MODEL}}"
        _MODACLOUDS_AR_SSH_USER="${MODACLOUDS_MODACLOUDS_AR_SSH_USER:-${_MODACLOUDS_AR_SSH_USER}}"
        _MODACLOUDS_AR_SSH_HOST="${MODACLOUDS_MODACLOUDS_AR_SSH_HOST:-${_MODACLOUDS_AR_SSH_HOST}}"
        _MODACLOUDS_AR_SSH_PASS="${MODACLOUDS_MODACLOUDS_AR_SSH_PASS:-${_MODACLOUDS_AR_SSH_PASS}}"
        _MODACLOUDS_AR_CLOUDML_IP="${MODACLOUDS_MODACLOUDS_AR_CLOUDML_IP:-${_MODACLOUDS_AR_CLOUDML_IP}}"
        _MODACLOUDS_AR_CLOUDML_PORT="${MODACLOUDS_AR_CLOUDML_PORT:-${_MODACLOUDS_AR_CLOUDML_PORT}}"
        _MODACLOUDS_TOWER4CLOUDS_MANAGER_IP="${MODACLOUDS_TOWER4CLOUDS_MANAGER_IP:-${_MODACLOUDS_TOWER4CLOUDS_MANAGER_IP}}"
        _MODACLOUDS_TOWER4CLOUDS_MANAGER_PORT="${MODACLOUDS_TOWER4CLOUDS_MANAGER_PORT:-${_MODACLOUDS_TOWER4CLOUDS_MANAGER_PORT}}"
        _MODACLOUDS_AR_DEF_DEMAND="${MODACLOUDS_AR_DEF_DEMAND:-${_MODACLOUDS_AR_DEF_DEMAND}}"
        _MODACLOUDS_AR_OBJ_STORE_IP="${MODACLOUDS_AR_OBJ_STORE_IP:-${_MODACLOUDS_AR_OBJ_STORE_IP}}"
        _MODACLOUDS_AR_OBJ_STORE_PORT="${MODACLOUDS_AR_OBJ_STORE_PORT:-${_MODACLOUDS_AR_OBJ_STORE_PORT}}"
        _MODACLOUDS_AR_OBJ_STORE_PATH="${MODACLOUDS_AR_OBJ_STORE_PATH:-${_MODACLOUDS_AR_OBJ_STORE_PATH}}"
        _MODACLOUDS_AR_SOLVER_NAME="${MODACLOUDS_AR_SOLVER_NAME:-${_MODACLOUDS_AR_SOLVER_NAME}}"
        _MODACLOUDS_AR_SOLVER_EXECUTABLE="${MODACLOUDS_AR_SOLVER_EXECUTABLE:-${_MODACLOUDS_AR_SOLVER_EXECUTABLE}}"
        _MODACLOUDS_AR_SOLVER_THREADS="${MODACLOUDS_AR_SOLVER_THREADS:-${_MODACLOUDS_AR_SOLVER_THREADS}}"        
        
        _MODACLOUDS_AR_TMPDIR="${MODACLOUDS_AR_TMPDIR:-${_MODACLOUDS_AR_TMPDIR}}"
        _MODACLOUDS_AR_PATH="${MODACLOUDS_AR_PATH:-${_MODACLOUDS_AR_PATH}}"
        _MODACLOUDS_AR_JAVA_HOME="${MODACLOUDS_AR_JAVA_HOME:-${_MODACLOUDS_AR_JAVA_HOME}}"

        _JAVA_HOME="${MODACLOUDS_AR_JAVA_HOME:-${_JAVA_HOME}}"
        _PATH="${MODACLOUDS_AR_PATH:-${_PATH}}"
        _TMPDIR="${MODACLOUDS_AR_TMPDIR:-${_TMPDIR}}"
)
declare "${_variable_overrides[@]}"


export PATH="${_PATH}"


if test ! -e "${_TMPDIR}" ; then
    mkdir -p -- "${_TMPDIR}"
    mkdir -- "${_TMPDIR}/tmp"
    mkdir -- "${_TMPDIR}/home"
fi


# NOTE:  Don't touch, it tries to ensure that only one instance (with the same identifier) of the same service is running.
exec {_lock}<"${_TMPDIR}"
if ! flock -x -n "${_lock}" ; then
    printf '[ee] failed to acquire lock; aborting!\n' >&2
    exit 1
fi


# NOTE:  Don't touch, it changes the current working directory to an empty one, specific to the service instance.
if test -d "${_TMPDIR}/cwd" ; then
    chmod -R u+w -- "${_TMPDIR}/cwd"
    rm -R -- "${_TMPDIR}/cwd"
fi
mkdir -- "${_TMPDIR}/cwd"

cd -- "${_TMPDIR}/cwd"


_environment=(
        PATH="${_PATH}"
        TMPDIR="${_TMPDIR}/tmp"
        HOME="${_TMPDIR}/home"
        USER='modaclouds-services'
)


_environment+=(
        
        # NOTE:  Add here the environment variables you want to pass to the actual process.
        #   (I.e. just defining them in the previous sections doesn't export them.)
        
        # NOTE:  No other variables, except the ones present in the `_environment` array are exported to the service.
        #   (I.e. the service starts with a clean environment.)
        
        MODACLOUDS_AR_DISTRIBUTION="${_MODACLOUDS_AR_DISTRIBUTION}
        MODACLOUDS_AR_OWN_IP="${_MODACLOUDS_AR_OWN_IP}}"
        MODACLOUDS_AR_LISTENER_PORT="${_MODACLOUDS_AR_LISTENER_PORT}}"
        MODACLOUDS_AR_PATH_TO_MODEL="${_MODACLOUDS_AR_PATH_TO_MODEL}}"
        MODACLOUDS_AR_SSH_USER="${_MODACLOUDS_AR_SSH_USER}}"
        MODACLOUDS_AR_SSH_HOST="${_MODACLOUDS_AR_SSH_HOST}}"
        MODACLOUDS_AR_SSH_PASS="${_MODACLOUDS_AR_SSH_PASS}}"
        MODACLOUDS_AR_CLOUDML_IP="${_MODACLOUDS_AR_CLOUDML_IP}}"
        MODACLOUDS_AR_CLOUDML_PORT="${_MODACLOUDS_AR_CLOUDML_PORT}}"
        MODACLOUDS_TOWER4CLOUDS_MANAGER_IP="${_MODACLOUDS_TOWER4CLOUDS_MANAGER_IP}}"
        MODACLOUDS_TOWER4CLOUDS_MANAGER_PORT="${_MODACLOUDS_TOWER4CLOUDS_MANAGER_PORT}}"
        MODACLOUDS_AR_DEF_DEMAND="${_MODACLOUDS_AR_DEF_DEMAND}}"
        MODACLOUDS_AR_OBJ_STORE_IP="${_MODACLOUDS_AR_OBJ_STORE_IP}}"
        MODACLOUDS_AR_OBJ_STORE_PORT="${_MODACLOUDS_AR_OBJ_STORE_PORT}}"
        MODACLOUDS_AR_OBJ_STORE_PATH="${_MODACLOUDS_AR_OBJ_STORE_PATH}}"
        MODACLOUDS_AR_SOLVER_NAME="${_MODACLOUDS_AR_SOLVER_NAME}}"
        MODACLOUDS_AR_SOLVER_EXECUTABLE="${_MODACLOUDS_AR_SOLVER_EXECUTABLE}}"
        MODACLOUDS_AR_SOLVER_THREADS="${_MODACLOUDS_AR_SOLVER_THREADS}}"
)


printf '[--]\n' >&2
printf '[ii] parameters:\n' >&2
printf '[ii]   * environment:\n' >&2
for _variable in "${_environment[@]}" ; do
    printf '[ii]       * `%s`;\n' "${_variable}" >&2
done
printf '[ii]   * working directory: `%s`;\n' "${PWD}" >&2
printf '[--]\n' >&2

printf '[ii] starting service...\n' >&2
printf '[--]\n' >&2


CLASS="it.polimi.modaclouds.recedingHorizonScaling4Cloud.Main"

# NOTE:  Actually execute the service.
exec \
    env \
            -i "${_environment[@]}" \
    "${_JAVA_HOME}/bin/java" \
            -cp "${_MODACLOUDS_AR_DISTRIBUTION}/service.jar:${_MODACLOUDS_AR_DISTRIBUTION}/lib/*" $CLASS "$@"

exit 1